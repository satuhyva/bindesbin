{"version":3,"sources":["ConvertANumber.js","validationCheckFunctions.js","convertingFunctions.js","App.js","serviceWorker.js","index.js"],"names":["screen","Dimensions","get","width","ConvertANumber","React","forwardRef","props","ref","from","useState","input","setInput","convertedvalue","setConvertedvalue","showplaceholder","setShowplaceholder","errormessage","setErrormessage","binToDes","desToBin","toggleShowPlaceholder","useImperativeHandle","resetValue","View","style","styles","container","Text","headerText","justText","TextInput","placeholder","inputText","errorHighlighting","onChangeText","text","inputError","iterator","Symbol","character","next","erotinOnJo","error","done","value","checkInputCharacterValidity","lengthError","length","pieces","split","maximum","Number","MAX_SAFE_INTEGER","toString","concat","checkInputLengthValidity","allErrors","result","sum","highestPower","i","parseInt","charAt","Math","pow","count","String","convertBinToDes","numbers","remainder","push","toAdd","updatedSum","counter","decimal","parseFloat","fragmentedSum","fragments","beginning","substring","join","replace","convertDesToBin","onSelectionChange","errorView","resultView","resultText","TouchableOpacity","resetView","onPress","resetText","StyleSheet","create","marginTop","alignItems","fontSize","fontWeight","marginBottom","color","fontStyle","height","backgroundColor","borderRadius","textAlign","justifyContent","paddingLeft","paddingRight","marginLeft","marginRight","appContainer","alignSelf","appNameView","appNameText","appDescriptionView","appDescriptionText","App","referenceBinToDes","createRef","referenceDesToBin","onStartShouldSetResponder","evt","persist","target","current","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.9d8e5cfd.chunk.js","sourcesContent":["import React, { useState, useImperativeHandle } from 'react';\nimport {\n  StyleSheet,\n  View,\n  Text,\n  TextInput,\n  Dimensions,\n  TouchableOpacity\n} from 'react-native';\nimport { checkInputLengthValidity, checkInputCharacterValidity } from './validationCheckFunctions'\nimport { convertBinToDes, convertDesToBin } from './convertingFunctions'\n\nlet screen = Dimensions.get('window').width\nif (screen > 400) {\n  screen = 400\n}\n\nconst ConvertANumber = React.forwardRef(( props, ref ) => {\n\n  const from = props.from\n  const [input, setInput] = useState('')\n  const [convertedvalue, setConvertedvalue] = useState('')\n  const [showplaceholder, setShowplaceholder] = useState(true)\n  const [errormessage, setErrormessage] = useState('')\n  const binToDes = [\n                      'BINÄÄRILUVUSTA DESIMAALILUVUKSI',\n                      'binääriluku',\n                      'syötä binääriluku..',\n                      'on desimaalilukuna: '\n                    ]\n  const desToBin = [\n                      'DESIMAALILUVUSTA BINÄÄRILUVUKSI',\n                      'desimaaliluku',\n                      'syötä desimaaliluku..',\n                      'on binäärilukuna: ',\n                    ]\n\n  const toggleShowPlaceholder = () => {\n    if (input === '') {\n      setShowplaceholder(true)\n    }\n  }\n  useImperativeHandle(ref, () => {\n    return {\n      toggleShowPlaceholder\n    }\n  })\n\n  const handleInputChanged = (text) => {\n    setInput(text)\n    const inputError = checkInputCharacterValidity(text, from)\n    const lengthError = checkInputLengthValidity(text, from)\n    let allErrors = ''\n    if (inputError !== '') {\n      allErrors = allErrors.concat(inputError).concat(' ')\n    } \n    if (lengthError !== '') {\n      allErrors = allErrors.concat(lengthError)\n    }\n    if (errormessage !== allErrors) {\n      setErrormessage(allErrors)\n    }\n    if (allErrors === '' && text !== '') {\n      const result = from === 2 ? convertBinToDes(text) : convertDesToBin(text)\n      setConvertedvalue(result)\n    } else {\n      setConvertedvalue('')\n    }\n  }\n\n  const handlePlaceholderDisplay = () => {\n    if (showplaceholder) {\n      setShowplaceholder(false)\n    }\n  }\n\n  const resetValue = () => {\n    setInput('')\n    setShowplaceholder(true)\n    setErrormessage('')\n    setConvertedvalue('')\n  }\n  \n  const displayErrorMessage = () => {\n    if (errormessage === '') {\n      return null\n    } else {\n      return (\n        <View style={styles.errorView}>\n          <Text style={styles.error}>{errormessage}</Text>\n        </View>\n      )\n    }\n  }\n\n  const displayConvertedValue = () => {\n    if (convertedvalue === '') {\n      return null\n    } else {\n      return (\n        <View style={styles.resultView}>\n          <Text style={styles.justText}>{from === 2 ? binToDes[3] : desToBin[3]}</Text>\n          <Text  style={styles.resultText}>{convertedvalue}</Text> \n          <TouchableOpacity>\n            <Text></Text>\n          </TouchableOpacity>                           \n        </View>\n      )\n    }\n  }\n\n  const displayResetButton = () => {\n    if (input === '') {\n      return null\n    } else {\n      return (\n        <View style={styles.resetView}>\n          <TouchableOpacity onPress={resetValue}>\n            <Text style={styles.resetText}>NOLLAA</Text>\n          </TouchableOpacity>\n        </View>\n      )\n    }\n  }\n\n  const inputTextStyling = () => {\n    if (showplaceholder) {\n      return styles.placeholder\n    } else {\n      if (errormessage === '') {\n        return styles.inputText\n      } else {\n        return [styles.inputText, styles.errorHighlighting]\n      }\n    }\n  }\n\n    return (\n        <View style={styles.container}>\n          <Text style={styles.headerText}>{from === 2 ? binToDes[0] : desToBin[0]}</Text>\n          <Text style={styles.justText}>{from === 2 ? binToDes[1] : desToBin[1]}</Text>\n          <TextInput\n              style={inputTextStyling()}\n              onChangeText={handleInputChanged}\n              placeholder={showplaceholder ? `${from === 2 ? binToDes[2] : desToBin[2]}` : null}\n              onSelectionChange={handlePlaceholderDisplay}\n              value={input}\n          ></TextInput>\n          {displayErrorMessage()}\n          {displayConvertedValue()}\n          {displayResetButton()}\n        </View>\n    )\n})\n\nconst styles = StyleSheet.create({\n  container: {\n    marginTop: 20,\n    alignItems: 'center',\n  },\n  headerText: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    marginTop: 10,\n    marginBottom: 10,\n  },\n  placeholder: {\n    color: 'gray',\n    fontStyle: 'italic',\n    height: 40,\n    backgroundColor: 'white',\n    width: screen - 100,\n    borderRadius: 6,\n    fontSize: 18,\n    textAlign: 'center'    \n  },\n  inputText: {\n    height: 40,\n    backgroundColor: 'white',\n    width: screen - 100,\n    borderRadius: 6,\n    fontSize: 20,\n    textAlign: 'center',\n    fontWeight: 'bold',\n  },\n  justText: {\n    fontSize: 17,\n    textAlign: 'center'    \n  },\n  resultView: {\n    marginTop: 10,\n  },\n  errorView: {\n    marginTop: 10,\n  },\n  error: {\n    fontSize: 17,\n    textAlign: 'center'   \n  },\n  errorHighlighting: {\n    color: 'red'\n  },\n  resetView: {\n    marginTop: 10,\n    backgroundColor: 'rosybrown',\n    height: 35,\n    borderRadius: 5,\n    justifyContent: 'center',\n    paddingLeft: 10,\n    paddingRight: 10\n  },\n  resetText: {\n    fontSize: 16\n  },\n  resultText: {\n    fontWeight: 'bold',\n    fontSize: 22,\n    textAlign: 'center',\n    marginTop: 5,\n    marginLeft: 10,\n    marginRight: 10\n  }\n});\n\n\nexport default ConvertANumber\n\n","export const checkInputLengthValidity = (inputText, from) => {\n    let error = ''\n    if (inputText.length > 18) {\n        error = 'Liian pitkä luku!'\n    }\n    if (from !== 2) {\n      const pieces = inputText.split('.')\n      const maximum = Number.MAX_SAFE_INTEGER.toString()\n      if (pieces[0].length >= maximum.length) {\n        error = error.concat('Liian suuri luku!')\n      } else if (pieces[1] && pieces[1].length >= maximum.length) {\n        error = error.concat('Liikaa desimaaleja!')\n      }\n    }\n  \n    return error\n  }\n\n  \n\nexport const checkInputCharacterValidity = (inputText, from) => {\n\n  let iterator = inputText[Symbol.iterator]()\n  let character = iterator.next()\n  let erotinOnJo = false\n  let error = false\n\n  while (!character.done) {\n    if (character.value === '.') {\n      if (erotinOnJo) {\n        error = true\n        break\n      }\n      else {\n        erotinOnJo = true\n      }\n    }\n    if (from === 2) {\n      if (character.value !== '0' && character.value !== '1' && character.value !== '.') {\n        error = true\n        break\n      }\n    } else {\n      if (character.value !== '0' && character.value !== '1'\n          && character.value !== '2' && character.value !== '3'\n          && character.value !== '4' && character.value !== '5'\n          && character.value !== '6' && character.value !== '7'\n          && character.value !== '8' && character.value !== '9'\n          && character.value !== '.') {\n            error = true\n        break\n      }\n    }\n    character = iterator.next()\n  }\n  if (error) {\n    error = from === 2 ? 'Binääriluvussa voi olla vain nollia ja ykkösiä ja erottimena yksi piste!'\n    : 'Desimaaliluvussa voi olla vain numeroita 0-9 ja erottimena yksi piste!'\n  } else {\n    error = ''\n  }\n  return error\n}\n\n\n\n\n\n\n","export const convertBinToDes = (inputText) => {\n    const pieces = inputText.split('.')\n    let sum = 0\n    let highestPower = pieces[0].length - 1\n    for (let i = 0; i <= highestPower; i++) {\n      const multiplier = parseInt(pieces[0].charAt(i))\n      sum = sum + multiplier * Math.pow(2, highestPower - i)\n    }\n    if (pieces[1]) {\n      let count = pieces[1].length\n      for (let i = 0; i < count; i++) {\n        const multiplier = parseInt(pieces[1].charAt(i))\n        sum = sum + multiplier * Math.pow(2, -(i +1))\n      }    \n    }\n    return String(sum)\n  }\n\n  export const convertDesToBin = (inputText) => {\n    const pieces = inputText.split('.')\n    let sum = ''\n    let result = parseInt(pieces[0])\n    if (result === 0) {\n      sum = '0'\n    }\n    let numbers = []\n    if (!(result === 0)) {\n      while (true) {\n        let remainder = result % 2\n        result = parseInt(result / 2)\n        if (!(result === 0 && remainder === 0)) {\n          numbers.push(remainder)\n        }\n        if (result === 0) {\n          break\n        }\n      }\n      const digits = numbers.length\n        for (let i = digits - 1; i >= 0; i--) {\n          const toAdd = numbers[i]\n          const updatedSum = sum.concat(toAdd)\n          sum = updatedSum\n        }\n    } \n    if (pieces[1]) {\n      let counter = 32\n      let decimal = parseFloat('0.' + pieces[1])\n      sum = sum.concat('.')\n      while (counter >= 0) {\n        decimal = decimal * 2\n        if (decimal === 1) {\n          sum = sum.concat('1')\n          break\n        } else if (decimal > 1) {\n          sum = sum.concat('1')\n          decimal = decimal - 1\n        } else {\n          sum = sum.concat('0')\n        }\n        counter--\n      }\n    }\n  \n    if (sum.length > 20) {\n      let fragmentedSum = sum\n      let fragments = []\n      while (true) {\n        const beginning = fragmentedSum.substring(0, 20).concat(' \\n ')\n        fragments.push(beginning)\n        fragmentedSum = fragmentedSum.substring(20)\n        if (fragmentedSum.length <= 20) {\n          fragments.push(fragmentedSum)\n          break\n        }\n      } \n      const updatedSum = [fragments].join('').replace(/,/g, '')\n      return updatedSum\n    }\n  \n    return sum\n  }\n\n  \n","\nimport React from 'react';\nimport {\n  StyleSheet,\n  View,\n  Text,\n  Dimensions\n} from 'react-native';\nimport ConvertANumber from './ConvertANumber'\n\nlet screen = Dimensions.get('window').width\nif (screen > 400) {\n  screen = 400\n}\n\nconst App = () => {\n\n  const referenceBinToDes = React.createRef()\n  const referenceDesToBin = React.createRef()\n\n    return (\n      <View style={styles.screen}>\n        <View style={styles.appContainer}  onStartShouldSetResponder={evt => {\n          evt.persist()\n          if (!(evt.target.placeholder)) {\n            referenceBinToDes.current.toggleShowPlaceholder()\n            referenceDesToBin.current.toggleShowPlaceholder()\n          }\n        }}>\n          <View style={styles.appNameView}>\n            <Text style={styles.appNameText}>BINDESBIN</Text>\n            <View style={styles.appDescriptionView}>\n              <Text style={styles.appDescriptionText}>\n                Tämän pikku sovelluksen avulla voit muuttaa binääriluvun desimaaliluvuksi tai päinvastoin. \n                Tämä sovellus selviää myös binääri- ja desimaalipisteistä.\n              </Text>\n            </View>\n          </View>  \n          <ConvertANumber\n            from={2}\n            ref={referenceBinToDes}\n          ></ConvertANumber>   \n          <ConvertANumber\n            from={10}\n            ref={referenceDesToBin}\n          ></ConvertANumber> \n        </View>\n      </View>  \n    );\n}\n\nconst styles = StyleSheet.create({\n  screen: {\n    backgroundColor:'#d5b8b9',\n  },\n  appContainer: {\n    width: screen, \n    alignSelf: 'center',\n    height: Dimensions.get('window').height\n  },\n  appNameView: {\n    alignItems: 'center',\n    marginTop: 10,\n  },\n  appNameText: {\n    fontWeight: 'bold',\n    fontSize: 35\n  },\n  appDescriptionView: {\n    textAlign: 'center',\n    marginTop: 5,\n    width: screen - 40,\n  },\n  appDescriptionText: {\n    fontSize: 16,\n  }\n});\n\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}